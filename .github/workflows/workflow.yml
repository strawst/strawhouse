name: Tag Workflow

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Sync strawhouse
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout original strawhouse repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures fetching the tag information

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'

      # Step 3: Setup Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Compile protoc
      - name: Compile protoc
        run: |
          LATEST=$(curl -s https://api.github.com/repos/protocolbuffers/protobuf/releases/latest | jq -r '.tag_name')
          wget -O /tmp/protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/${LATEST}/protoc-${LATEST#v}-linux-x86_64.zip
          sudo unzip -o /tmp/protoc.zip -d /usr/local bin/protoc
          sudo unzip -o /tmp/protoc.zip -d /usr/local 'include/*'
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          export PATH="$PATH:$(go env GOPATH)/bin"
          make protoc

      # Step 5: Sync driver repo
      - name: Sync driver repo
        run: |
          git clone https://github.com/strawst/strawhouse-go.git
          find strawhouse-go -mindepth 1 ! -path '*/.git*' ! -path '*.md' -exec rm -rf {} +
          cp -r driver/* strawhouse-go
          mkdir -p strawhouse-go/pb
          cd strawhouse-go
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Sync driver on strawhouse tag ${{ github.ref_name }}" || exit 0
          git tag -a ${{ github.ref_name }} -m "Sync driver on strawhouse tag ${{ github.ref_name }}"
          git push https://bsthun:${{ secrets.PAT_TOKEN }}@github.com/strawst/strawhouse-go.git main
          curl -X POST -H "Authorization: token ${{ secrets.PAT_TOKEN }}" -d '{"tag_name": "${{ github.ref_name }}", "name": "${{ github.ref_name }}", "body": "Sync driver on strawhouse tag ${{ github.ref_name }}"}' https://api.github.com/repos/strawst/strawhouse-go/releases

      # Step 6: Build binary
      - name: Build binary
        run: |
          make release
          RELEASE=$(curl -s -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}"  "https://api.github.com/repos/strawst/strawhouse/releases/tags/${{ github.ref_name }}" | jq -r '.id')
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@./.local/release/strawhousebackd_linux_amd64" "https://uploads.github.com/repos/strawst/strawhouse/releases/$RELEASE/assets?name=strawhousebackd_linux_amd64"
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@./.local/release/strawhousebackd_linux_arm64" "https://uploads.github.com/repos/strawst/strawhouse/releases/$RELEASE/assets?name=strawhousebackd_linux_arm64"
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@./.local/release/strawc_linux_amd64" "https://uploads.github.com/repos/strawst/strawhouse/releases/$RELEASE/assets?name=strawc_linux_amd64"
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@./.local/release/strawc_linux_arm64" "https://uploads.github.com/repos/strawst/strawhouse/releases/$RELEASE/assets?name=strawc_linux_arm64"
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@./.local/release/strawc_darwin_amd64" "https://uploads.github.com/repos/strawst/strawhouse/releases/$RELEASE/assets?name=strawc_darwin_amd64"
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@./.local/release/strawc_darwin_arm64" "https://uploads.github.com/repos/strawst/strawhouse/releases/$RELEASE/assets?name=strawc_darwin_arm64"
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@./.local/release/strawc_windows_amd64.exe" "https://uploads.github.com/repos/strawst/strawhouse/releases/$RELEASE/assets?name=strawc_windows_amd64.exe"
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@./.local/release/strawc_windows_arm64.exe" "https://uploads.github.com/repos/strawst/strawhouse/releases/$RELEASE/assets?name=strawc_windows_arm64.exe"

      # Step 4: Build docker
      - name: Build docker
        run: |
          docker login --username bsthun --password ${{ secrets.PAT_TOKEN }} ghcr.io
          BUILDX_NO_DEFAULT_ATTESTATIONS=1 \
            docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag ghcr.io/strawst/strawhouse-backend:${{ github.ref_name }} \
            --tag ghcr.io/strawst/strawhouse-backend:latest \
            --push .
